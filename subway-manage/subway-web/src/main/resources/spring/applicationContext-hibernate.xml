<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- spring与hibernate整合配置，扫描所有dao -->
    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="packagesToScan" value="com.chaosapollo.subway.entity" />
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate_dialect}</prop>
                <prop key="hibernate.show_sql">${hibernate_show_sql}</prop>
                <prop key="hibernate.format_sql">${hibernate_format_sql}</prop>
                <!--
                none:
                    什么都不做。
                create：
                    每次加载hibernate时都会删除上一次的生成的表，然后根据你的model类再重新来生成新表，哪怕两次没有任何改变也要这样执行，
                    这就是导致数据库表数据丢失的一个重要原因。
                create-drop ：
                    每次加载hibernate时根据model类生成表，但是sessionFactory一关闭,表就自动删除。
                update：
                    最常用的属性，第一次加载hibernate时根据model类会自动建立起表的结构（前提是先建立好数据库），
                    以后加载hibernate时根据 model类自动更新表结构，即使表结构改变了但表中的行仍然存在不会删除以前的行。
                    要注意的是当部署到服务器后，表结构是不会被马上建立起来的，是要等应用第一次运行起来后才会。
                validate ：
                    每次加载hibernate时，验证创建数据库表结构，只会和数据库中的表进行比较，不会创建新表，但是会插入新值。
                -->
                <prop key="hibernate.hbm2ddl.auto">${hibernate_hbm2ddl_auto}</prop>
            </props>
        </property>
    </bean>
</beans>